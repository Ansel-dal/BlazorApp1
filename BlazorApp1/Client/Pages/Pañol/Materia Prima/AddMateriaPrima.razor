<div class="card">
    <div class="card-body">
        <EditForm Model="oMateriaPrima" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />

            <div class="form-group row mb-1">
                <label class="col-sm-3">Ingrese el nombre</label>
                <InputText @bind-Value="@oMateriaPrima.Nombre" placeholder="Nombre"></InputText>
                <ValidationMessage For="(()=> oMateriaPrima.Nombre)" />
            </div>

            <div class="form-group row mb-1">
                <label class="col-sm-3">Codigo</label>
                <InputText @bind-Value="@oMateriaPrima.Codigo" placeholder="Codigo"></InputText>
                <ValidationMessage For="(()=> oMateriaPrima.Codigo)" />
            </div>

            <div class="form-group row mb-1">
                <label class="col-sm-3">StockReal</label>
                <InputNumber @bind-Value="@oMateriaPrima.StockReal" placeholder="StockReal"></InputNumber>
                <ValidationMessage For="(()=> oMateriaPrima.StockReal)" />
            </div>
            <div class="form-group row mb-1">
                <label class="col-sm-3">StockMin</label>
                <InputNumber @bind-Value="@oMateriaPrima.StockMin" placeholder="StockMin"></InputNumber>
                <ValidationMessage For="(()=> oMateriaPrima.StockMin)" />
            </div>
            <div class="form-group row mb-1">
                <label class="col-sm-3">StockMax</label>
                <InputNumber @bind-Value="@oMateriaPrima.StockMax" placeholder="StockMax"></InputNumber>
                <ValidationMessage For="(()=> oMateriaPrima.StockMax)" />
            </div>

            <button class="btn btn-outline-success" type="submit">Aceptar</button>
        </EditForm>
    </div>
</div>


@code {
    MateriaPrima oMateriaPrima = new();
    Respuesta<MateriaPrima> oRta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            oRta = await http.GetFromJsonAsync<Respuesta<MateriaPrima>>($"/api/MateriaPrima/{id}");
            oMateriaPrima = oRta.List;
        }
    }

    async Task Guardar()
    {
        if (id == 0)
        {
            await http.PostAsJsonAsync<MateriaPrima>("/api/MateriaPrima", oMateriaPrima);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await http.PutAsJsonAsync<MateriaPrima>("/api/MateriaPrima", oMateriaPrima);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }
}