<div class="card">
    <div class="card-body">
        <EditForm Model="oInsumo" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />

            <div class="form-group row mb-1">
                <label class="col-sm-3">Ingrese el nombre</label>
                <InputText @bind-Value="@oInsumo.Nombre" placeholder="Nombre"></InputText>
                <ValidationMessage For="(()=> oInsumo.Nombre)" />
            </div>

            <div class="form-group row mb-1">
                <label class="col-sm-3">Codigo</label>
                <InputText @bind-Value="@oInsumo.Codigo" placeholder="Codigo"></InputText>
                <ValidationMessage For="(()=> oInsumo.Codigo)" />
            </div>

            <div class="form-group row mb-1">
                <label class="col-sm-3">Foto</label>
                <InputText @bind-Value="@oInsumo.Foto" placeholder="Foto"></InputText>
                <ValidationMessage For="(()=> oInsumo.Foto)" />
            </div>

            <div class="form-group row mb-1">
                <label class="col-sm-3">Descripcion</label>
                <InputText @bind-Value="@oInsumo.Descripcion" placeholder="Descripcion"></InputText>
                <ValidationMessage For="(()=> oInsumo.Descripcion)" />
            </div>
            <div class="form-group row mb-1">
                <label class="col-sm-3">StockReal</label>
                <InputNumber @bind-Value="@oInsumo.StockReal" placeholder="StockReal"></InputNumber>
                <ValidationMessage For="(()=> oInsumo.StockReal)" />
            </div>
            <div class="form-group row mb-1">
                <label class="col-sm-3">StockMin</label>
                <InputNumber @bind-Value="@oInsumo.StockMin" placeholder="StockMin"></InputNumber>
                <ValidationMessage For="(()=> oInsumo.StockMin)" />
            </div>
            <div class="form-group row mb-1">
                <label class="col-sm-3">StockMax</label>
                <InputNumber @bind-Value="@oInsumo.StockMax" placeholder="StockMax"></InputNumber>
                <ValidationMessage For="(()=> oInsumo.StockMax)" />
            </div>

            <button class="btn btn-outline-success" type="submit">Enviar</button>
        </EditForm>
    </div>
</div>


@code {
    Insumo oInsumo = new();
    Respuesta<Insumo> oRta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            oRta = await http.GetFromJsonAsync<Respuesta<Insumo>>($"/api/Insumo/{id}");
            oInsumo = oRta.List;
        }
    }

    async Task Guardar()
    {
        if (id == 0)
        {
            await http.PostAsJsonAsync<Insumo>("/api/Insumo", oInsumo);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await http.PutAsJsonAsync<Insumo>("/api/Insumo", oInsumo);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }
}
